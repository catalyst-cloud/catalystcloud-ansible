#!/usr/bin/env ansible-playbook
---

# This playbook assumes an openstack rc file has been sourced

- name: Deploy three networked host machines as swarm nodes
  hosts: localhost
  vars:
    # change as required
    keypair_name: "swarm-key-{{ localhost_name.stdout }}"
    router_name: "swarm-router-{{ localhost_name.stdout }}"
    private_network_name: "swarm-net-{{ localhost_name.stdout }}"
    security_group_name: "swarm-sg-{{ localhost_name.stdout }}"
    # instance configuration
    instances:
      - instance_name: "manager1-{{ localhost_name.stdout }}"
        instance_group: "swarm-managers-{{ localhost_name.stdout }}"
      - instance_name: "worker1-{{ localhost_name.stdout }}"
        instance_group: "swarm-workers-{{ localhost_name.stdout }}"
      - instance_name: "worker2-{{ localhost_name.stdout }}"
        instance_group: "swarm-workers-{{ localhost_name.stdout }}"
    # no changes required after this
    region: "{{ lookup('env','OS_REGION_NAME') }}"

  tasks:

    - name: Register training machine hostname as variable
      local_action: command hostname
      register: localhost_name

    - name: Connect to the Catalyst Cloud
      os_auth:

    - name: Remove swarm node compute instances
      os_server:
        name: "{{ item.instance_name }}"
        state: absent
      with_items: "{{ instances }}"

    - name: Remove swarm keypair
      os_keypair:
        state: absent
        name: "{{ keypair_name }}"

    - name: Remove swarm router
      os_router:
        state: absent
        name: "{{ router_name }}"

    - name: Remove swarm network
      os_network:
        state: absent
        name: "{{ private_network_name }}"

    - name: Remove swarm security_group
      os_security_group:
        state: absent
        name: "{{ security_group_name }}"

    - name: Remove hosts from local ~/.ssh/config
      blockinfile:
        dest: "{{ lookup('env', 'HOME') }}/.ssh/config"
        state: absent
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ item.instance_name }} docker swarm node"
      with_items: "{{ instances }}"

    - name: Remove host from /etc/hosts
      become: yes
      blockinfile:
        dest: /etc/hosts
        state: absent
        insertafter: EOF
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{  item.instance_name  }} docker swarm node"
      with_items: "{{ instances }}"

